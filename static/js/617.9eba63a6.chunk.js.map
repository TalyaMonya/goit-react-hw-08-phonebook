{"version":3,"file":"static/js/617.9eba63a6.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/schemaYap.js","redux/filter/selectors.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Field, Form } from 'formik';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const StyledForm = styled(Form)`\n    margin-bottom: 30px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 400px;\n    padding: 15px 10px;\n    \n    background-color: ${p => p.theme.colors.bcg};\n    border: 3px solid ${p => p.theme.colors.border};\n    border-radius: 6px;\n`\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 18px;\n    font-size: ${p => p.theme.fontSizes.m};\n    color: ${p => p.theme.colors.black};\n    `\n\nexport const DivLabel = styled.div`\n    display: flex;\n    gap: 10px;\n    margin-bottom: 5px;\n`\n\nexport const Error = styled.span`\n    font-size: ${p => p.theme.fontSizes.s};\n    font-weight: 700;\n    color: ${props => props.theme.colors.accent};\n`\n\nexport const FieldFormik = styled(Field)`\n    padding: 8px 16px;\n    max-width: 100%;\n    border: 0;\n    outline: 0;\n    border-radius: 8px;\n    box-shadow: inset 1px 1px 3px #8ba793, inset -1px -1px 5px #fff;\n    font-style: italic;\n    font-size: ${props => props.theme.fontSizes.s};\n`\n\nexport const StyledButton = styled.button`\n  margin: 0 auto;\n  width: 120px;\n  font-size: 16px;\n  border: 1 solid;\n  border-radius: 4px;\n  padding: 8px 12px;\n  box-shadow: inset 0 0 20px rgba(255, 255, 255, 0);\n  outline: 1px solid;\n  outline-color: rgba(255, 255, 255, .5);\n  outline-offset: 0px;\n  text-shadow: none;\n  transition: all 1250ms cubic-bezier(0.19, 1, 0.22, 1);\n  background-color: #00CED1;\n\n\n&:hover {\n  border: 2px solid;\n  box-shadow: inset 0 0 20px rgba(255, 255, 255, .5), 0 0 20px rgba(255, 255, 255, .2);\n  outline-color: rgba(255, 255, 255, 0);\n  outline-offset: 15px;\n  text-shadow: 1px 1px 2px #427388;\n  background-color: #1d81c6;\n}\n`","import * as Yup from 'yup';\n\nexport const Schema = Yup.object().shape({\n  name: Yup\n    .string()\n    .min(2)\n    .trim()\n    .required(),\n  number: Yup\n    .string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});","export const selectFilter = state => state.filter;","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContacts = state => state.contacts.items;\n\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import { Formik, ErrorMessage } from 'formik';\nimport { StyledForm, Label, DivLabel, Error, FieldFormik, StyledButton, FormContainer } from './ContactForm.styled';\nimport { FaUserSecret } from 'react-icons/fa';\nimport { BsTelephone } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport { Schema } from './schemaYap';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toastifyOptions } from 'utils/toastifyOptions';\n\n\n\nconst initialValues = { name: '', number: '' };\n\n\nexport const ContactForm = () => {\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n\n    const onAddContact = ({ name, number }) => {\n        const isInContacts = contacts.some(\n        contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim());\n        // Перевіряє, чи існує контакт із таким самим ім'ям у списку контактів. Якщо контакт вже існує, виводиться попередження.\n        if (isInContacts) {\n            // alert(`${name} is already in contacts`);\n        return toast.error(`${name} is already in contacts`, toastifyOptions);\n         }\n        dispatch(addContacts({ name, number }));\n        toast.success(`${name} Added to contacts`, toastifyOptions);\n    };\n\n\n\n    return (\n        <FormContainer>\n             <Formik\n            initialValues={initialValues}\n            onSubmit={(values, { resetForm }) => {\n                onAddContact({...values});\n                resetForm();\n            }}\n            validationSchema={Schema}\n            >\n            <StyledForm>\n                <Label >\n                    <DivLabel><FaUserSecret/>Name</DivLabel>\n                    <FieldFormik name=\"name\" placeholder=\"Введіть імʼя\" />\n                    <Error><ErrorMessage name=\"name\"/></Error>\n                </Label>\n\n                <Label>\n                    <DivLabel><BsTelephone/>Number</DivLabel>\n                    <FieldFormik type=\"tel\" name=\"number\" placeholder=\"Введіть номер\" />\n                    <Error><ErrorMessage name=\"number\"/></Error>\n                </Label>\n\n                <StyledButton type=\"submit\">Add contact</StyledButton>\n            </StyledForm>\n            </Formik>\n       </FormContainer>\n    )\n}\n\n\n","import styled from \"styled-components\";\n\nexport const ListContainer = styled.div`\n  display: flex;\n    justify-content: center;\n`\n\n\nexport const List = styled.ul`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 400px;\n    padding: 10px;\n    border: 3px solid ${p => p.theme.colors.border};\n    border-radius: 8px;\n    background-color: rgba(0, 0, 0, 0.6);\n`\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: 700;\n  padding: 10px;\n  margin-bottom: 5px;\n  background-color: ${p => p.theme.colors.bcg};\n  border: 2px solid ${p => p.theme.colors.border};\n  border-radius: 6px;\n`\n\nexport const Btn = styled.button`\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 8px;\n  padding-right: 8px;\n\n  border: none;\n  outline: none;\n  border-radius: 8px;\n\n  color: ${p => p.theme.colors.white};\n  background-color: #e84e43;\n  box-shadow: ${p => p.theme.shadows.boxShadow};\n  transition: all 0.2s ease-in-out;\n\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.primary};\n    color: rgb(0, 206, 209);\n    box-shadow: -2px -2px 5px #fff, 2px 2px 5px #8ba793;\n    svg {\n      fill: ${p => p.theme.colors.accent};\n      stroke: ${p => p.theme.colors.accent};\n    }\n    &:active {\n      color: rgb(0, 206, 209);\n      box-shadow: inset 1px 1px 2px #8ba793, inset -1px -1px 2px #fff;\n      svg {\n        fill: ${p => p.theme.colors.accent};\n        stroke: ${p => p.theme.colors.accent};\n      }\n    }\n  }\n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { List, ListItem, Btn, ListContainer } from \"./ContactList.styled\";\nimport {RiDeleteBinLine} from 'react-icons/ri'\nimport { selectVisibleContacts } from \"../../redux/contacts/selectors\";\nimport { deleteContacts } from \"redux/contacts/operations\";\n\n\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectVisibleContacts);\n    const dispatch = useDispatch();\n\n   \n    return (\n        <ListContainer>\n            <List>\n            {contacts.map(contact => {\n                return (\n                    <ListItem key={contact.id}>\n                        <span>{contact.name}:</span>\n                        <span>{contact.number}</span>\n                        <Btn\n                        type=\"button\"\n                        name=\"delete\"\n                        onClick={() => dispatch(deleteContacts(contact.id))}>\n                        <RiDeleteBinLine size=\"14\"/>\n                    </Btn>\n               </ListItem>\n           )\n       })}\n    </List>\n        </ListContainer>\n    ) \n}\n\n\n","import styled from \"styled-components\";\n\n\nexport const Div = styled.div`\n    margin-bottom: 20px;\n    display: flex;\n    justify-content: center;\n`\nexport const Label = styled.label`\n    color: ${p => p.theme.colors.text};\n    font-size: 18px;\n`\nexport const Input = styled.input`\n    width: 400px;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    padding-left: 16px;\n    padding-right: 16px;\n    max-width: 100%;\n    border: 0;\n    outline: 0;\n    border-radius: 8px;\n    box-shadow: inset 1px 1px 3px #8ba793, inset -1px -1px 5px #fff;\n    font-style: italic;\n    font-size: 14px;\n`\n\nexport const Span = styled.span`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-left: 8px;\n    color: white;\n`","import { Div, Input, Label, Span } from \"./Filter.styled\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"redux/filter/filterSlice\";\nimport { selectFilter } from \"redux/filter/selectors\";\n\n\n\n\nexport const Filter = () => {\n    const value = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const onChange = event => {\n        const normalizedValue = event.target.value.toLowerCase();\n\n        dispatch(changeFilter(normalizedValue));\n    }\n    return (\n        <Div>\n            <Label>\n                <Span><FaSearch size=\"16\"/>Find contacts by name</Span>\n                <Input type=\"text\" value={value} onChange={onChange} />\n            </Label>\n        </Div>\n    )\n}","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\n\nimport { Filter } from \"components/Filter/Filter\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectContacts, selectLoading } from \"redux/contacts/selectors\";\nimport { Loader } from \"utils/loader\";\n\n\nexport default function Tasks() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectLoading);\n    const contacts = useSelector(selectContacts);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            <title>Your contacts</title>\n            <ContactForm />\n            {contacts.length > 0 && (< Filter />)}\n            {contacts.length > 0 && (< ContactList />)}\n            { isLoading && <Loader /> }\n        </>\n    );\n}"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","StyledForm","Form","_templateObject2","p","theme","colors","bcg","border","Label","_templateObject3","fontSizes","m","black","DivLabel","_templateObject4","Error","_templateObject5","s","props","accent","FieldFormik","Field","_templateObject6","StyledButton","_templateObject7","Schema","Yup","shape","name","min","trim","required","number","matches","selectFilter","state","filter","selectLoading","contacts","isLoading","selectContacts","items","selectVisibleContacts","createSelector","contact","toLowerCase","includes","initialValues","ContactForm","useSelector","dispatch","useDispatch","_jsx","children","Formik","onSubmit","values","_ref2","resetForm","_ref","some","toast","concat","toastifyOptions","addContacts","onAddContact","_objectSpread","validationSchema","_jsxs","FaUserSecret","placeholder","ErrorMessage","BsTelephone","type","ListContainer","List","ListItem","Btn","white","shadows","boxShadow","primary","ContactList","map","onClick","deleteContacts","id","RiDeleteBinLine","size","Div","text","Input","Span","Filter","value","FaSearch","onChange","event","normalizedValue","target","changeFilter","Tasks","useEffect","fetchContacts","_Fragment","length","Loader"],"sourceRoot":""}